import Head from 'next/head';
import { Navbar } from '../components/header/header';
import Footer from '../components/footer/footer';
import React, { useState } from 'react';
import { Icon } from '@iconify/react';
import Table from '@mui/material/Table';
import TableBody from '@mui/material/TableBody';
import TableCell from '@mui/material/TableCell';
import TableContainer from '@mui/material/TableContainer';
import TableHead from '@mui/material/TableHead';
import TableRow from '@mui/material/TableRow';
import Paper from '@mui/material/Paper';
import { useRouter } from 'next/router';
import nookies, { parseCookies } from 'nookies';
import axios from 'axios';

import Box from '@mui/material/Box';
import Tab from '@mui/material/Tab';
import TabContext from '@mui/lab/TabContext';
import TabList from '@mui/lab/TabList';
import TabPanel from '@mui/lab/TabPanel';

import AddModal from '../components/admin/adminadd/addmodal';
import { BASEURL } from '../components/lib/variables';

// function createData(name, price, id, location) {
// 	return { name, price, id, location };
// }

function Admin({ user, JWT, hotels, enquiries, messages }) {
	console.log(hotels);
	const router = useRouter();

	const logout = async () => {
		try {
			await axios.get('/api/logout');
			router.push('/');
		} catch (e) {
			console.log(e);
		}
	};

	const [value, setValue] = React.useState('1');

	const handleChange = (event, newValue) => {
		setValue(newValue);
	};
	const [isOpen, setIsOpen] = useState(false);

	console.log('messages', messages);
	return (
		<div>
			<Head>
				<title>Holidaze</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
				<html lang="en" />
				<link
					rel="apple-touch-icon"
					sizes="180x180"
					href="/apple-touch-icon.png"
				/>
				<link
					rel="icon"
					type="image/png"
					sizes="32x32"
					href="/favicon-32x32.png"
				/>
				<link
					rel="icon"
					type="image/png"
					sizes="16x16"
					href="/favicon-16x16.png"
				/>
			</Head>
			<Navbar />
			<main>
				<div className="adminWrapper">
					<div className="logoutWrapper">
						<div className="logoutWrapper_headingWrapper">
							<h1>ADMIN PAGE</h1>
						</div>
						<button className="logoutBtn" onClick={logout}>
							Logout
						</button>
					</div>
					<div className="adminWrapper_tableBox">
						<Box sx={{ width: '100%', typography: 'body1' }}>
							<TabContext value={value}>
								<Box sx={{ borderBottom: 1, borderColor: 'divider' }}>
									<TabList
										onChange={handleChange}
										aria-label="lab API tabs example">
										<Tab label="Hotels" value="1" />
										<Tab label="Enquiries" value="2" />
										<Tab label="Messages" value="3" />
									</TabList>
								</Box>
								<TabPanel value="1">
									<TableContainer component={Paper}>
										<Table sx={{ minWidth: 450 }} aria-label="simple table">
											<TableHead>
												<TableRow>
													<TableCell>Hotels</TableCell>
													<TableCell align="right">Id</TableCell>
													<TableCell align="right">Price</TableCell>
													<TableCell align="right">Location</TableCell>
													<TableCell align="right">
														<Icon icon="bx:edit" />
													</TableCell>
													<TableCell align="right">
														<Icon icon="fa6-regular:trash-can" />
													</TableCell>
												</TableRow>
											</TableHead>
											<TableBody>
												{hotels.map(({ id, title, adress, price }) => (
													<TableRow
														key={id}
														sx={{
															'&:last-child td, &:last-child th': { border: 0 },
														}}>
														<TableCell component="th" scope="row">
															{title}
														</TableCell>
														<TableCell align="right">{id}</TableCell>
														<TableCell align="right">{price}</TableCell>
														<TableCell align="right">{adress}</TableCell>
														<TableCell align="right">
															<button>
																<Icon icon="bx:edit" />
															</button>
														</TableCell>
														<TableCell align="right">
															<button
																onClick={() => {
																	async function deleteHotel() {
																		let response = await axios.delete(
																			`${BASEURL}/hotels/${id}`,

																			{
																				headers: {
																					Authorization: `Bearer ${JWT}`,
																				},
																			}
																		);
																		router.replace(router.asPath);
																		console.log(response);
																	}
																	deleteHotel();
																}}>
																<Icon icon="fa6-regular:trash-can" />
															</button>
														</TableCell>
													</TableRow>
												))}
											</TableBody>
										</Table>
									</TableContainer>
									<button onClick={() => setIsOpen(true)} className="addBtn">
										Add
									</button>
									{isOpen && <AddModal JWT={JWT} setIsOpen={setIsOpen} />}
								</TabPanel>
								<TabPanel value="2">
									<TableContainer component={Paper}>
										<Table sx={{ minWidth: 450 }} aria-label="simple table">
											<TableHead>
												<TableRow>
													<TableCell align="left">Name</TableCell>
													<TableCell align="left">Phonenumber</TableCell>
													<TableCell align="left">Email</TableCell>
													<TableCell align="left">Message</TableCell>

													<TableCell align="left">
														<Icon icon="fa6-regular:trash-can" />
													</TableCell>
												</TableRow>
											</TableHead>
											<TableBody>
												{enquiries.map(
													({ name, phonenumber, email, message, id }) => (
														<TableRow
															key={id}
															sx={{
																'&:last-child td, &:last-child th': {
																	border: 0,
																},
															}}>
															<TableCell align="left">{name}</TableCell>
															<TableCell align="left">{phonenumber}</TableCell>
															<TableCell align="left">{email}</TableCell>
															<TableCell align="left">{message}</TableCell>
															<TableCell align="left">
																<button
																	onClick={() => {
																		async function deleteEnquirie() {
																			let response = await axios.delete(
																				`${BASEURL}/enquiries/${id}`,

																				{
																					headers: {
																						Authorization: `Bearer ${JWT}`,
																					},
																				}
																			);
																			router.replace(router.asPath);
																			console.log(response);
																		}
																		deleteEnquirie();
																	}}>
																	<Icon icon="fa6-regular:trash-can" />
																</button>
															</TableCell>
														</TableRow>
													)
												)}
											</TableBody>
										</Table>
									</TableContainer>
								</TabPanel>
								<TabPanel value="3">
									<TableContainer component={Paper}>
										<Table sx={{ minWidth: 450 }} aria-label="simple table">
											<TableHead>
												<TableRow>
													<TableCell align="left">Name</TableCell>
													<TableCell align="left">Phonenumber</TableCell>
													<TableCell align="left">Email</TableCell>
													<TableCell align="left">Message</TableCell>

													<TableCell align="left">
														<Icon icon="fa6-regular:trash-can" />
													</TableCell>
												</TableRow>
											</TableHead>
											<TableBody>
												{messages.map(
													({ firstname, lastname, email, message, id }) => (
														<TableRow
															key={id}
															sx={{
																'&:last-child td, &:last-child th': {
																	border: 0,
																},
															}}>
															<TableCell align="left">{firstname}</TableCell>
															<TableCell align="left">{lastname}</TableCell>
															<TableCell align="left">{email}</TableCell>
															<TableCell align="left">{message}</TableCell>
															<TableCell align="left">
																<button
																	onClick={() => {
																		async function deleteEnquirie() {
																			let response = await axios.delete(
																				`${BASEURL}/enquiries/${id}`,

																				{
																					headers: {
																						Authorization: `Bearer ${JWT}`,
																					},
																				}
																			);
																			router.replace(router.asPath);
																			console.log(response);
																		}
																		deleteEnquirie();
																	}}>
																	<Icon icon="fa6-regular:trash-can" />
																</button>
															</TableCell>
														</TableRow>
													)
												)}
											</TableBody>
										</Table>
									</TableContainer>
								</TabPanel>
							</TabContext>
						</Box>
					</div>
				</div>
			</main>
			<Footer />
		</div>
	);
}

export default Admin;

export const getServerSideProps = async (ctx) => {
	const cookies = nookies.get(ctx);
	let user = null;

	const JWT = parseCookies(ctx).jwt;

	let hotels = null;
	let enquiries = null;
	let messages = null;

	if (JWT) {
		try {
			const { data } = await axios.get(BASEURL + '/users/me', {
				headers: {
					Authorization: `Bearer ${JWT}`,
				},
			});
			user = data;

			const hotelsData = await axios.get(BASEURL + '/hotels');
			const enquiriesData = await axios.get(BASEURL + '/enquiries');
			const messageData = await axios.get(BASEURL + '/messages');

			enquiries = enquiriesData.data;
			hotels = hotelsData.data;
			messages = messageData.data;
		} catch (e) {
			console.log(e);
		}
	}

	if (!JWT) {
		return {
			redirect: {
				permanent: false,
				destination: '/',
			},
		};
	}

	return {
		props: {
			user,
			JWT,
			hotels,
			enquiries,
			messages,
		},
	};
};
