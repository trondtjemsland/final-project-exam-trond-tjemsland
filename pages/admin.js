import Head from 'next/head';
import { Navbar } from './components/header/header';
import Footer from './components/footer/footer';
import * as React from 'react';
import { Icon } from '@iconify/react';
import Table from '@mui/material/Table';
import TableBody from '@mui/material/TableBody';
import TableCell from '@mui/material/TableCell';
import TableContainer from '@mui/material/TableContainer';
import TableHead from '@mui/material/TableHead';
import TableRow from '@mui/material/TableRow';
import Paper from '@mui/material/Paper';
import { useRouter } from 'next/router';
import nookies, { parseCookies } from 'nookies';
import axios from 'axios';

function createData(name, price, id, location) {
	return { name, price, id, location };
}

function Admin({ user, JWT, hotels }) {
	console.log(hotels);
	const router = useRouter();
	// const {
	// 	user: { email, username },
	// } = props;

	const logout = async () => {
		try {
			await axios.get('/api/logout');
			router.push('/');
		} catch (e) {
			console.log(e);
		}
	};

	return (
		<div>
			<Head>
				<title>Holidaze</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
				<link
					rel="apple-touch-icon"
					sizes="180x180"
					href="/apple-touch-icon.png"
				/>
				<link
					rel="icon"
					type="image/png"
					sizes="32x32"
					href="/favicon-32x32.png"
				/>
				<link
					rel="icon"
					type="image/png"
					sizes="16x16"
					href="/favicon-16x16.png"
				/>
			</Head>
			<Navbar />
			<main>
				<div className="adminWrapper">
					<div className="logoutWrapper">
						<div className="logoutWrapper_headingWrapper">
							<h1>ADMIN PAGE</h1>
						</div>
						<button className="logoutBtn" onClick={logout}>
							Logout
						</button>
					</div>
					<div className="adminWrapper_tableBox">
						<TableContainer component={Paper}>
							<Table sx={{ minWidth: 450 }} aria-label="simple table">
								<TableHead>
									<TableRow>
										<TableCell>Hotels</TableCell>
										<TableCell align="right">Id</TableCell>
										<TableCell align="right">Price</TableCell>
										<TableCell align="right">Location</TableCell>
										<TableCell align="right">
											<Icon icon="bx:edit" />
										</TableCell>
									</TableRow>
								</TableHead>
								<TableBody>
									{hotels.map(({ id, title, adress, price }) => (
										<TableRow
											key={id}
											sx={{
												'&:last-child td, &:last-child th': { border: 0 },
											}}>
											<TableCell component="th" scope="row">
												{title}
											</TableCell>
											<TableCell align="right">{id}</TableCell>
											<TableCell align="right">{price}</TableCell>
											<TableCell align="right">{adress}</TableCell>
											<TableCell align="right">
												<Icon icon="bx:edit" />
											</TableCell>
										</TableRow>
									))}
								</TableBody>
							</Table>
						</TableContainer>
						<button className="addBtn">Add Product</button>
					</div>
				</div>
			</main>
			<Footer />
		</div>
	);
}

export default Admin;

export const getServerSideProps = async (ctx) => {
	const cookies = nookies.get(ctx);
	let user = null;

	const JWT = parseCookies(ctx).jwt;

	let hotels = null;

	if (JWT) {
		try {
			const { data } = await axios.get('http://localhost:1337/users/me', {
				headers: {
					Authorization: `Bearer ${JWT}`,
				},
			});
			user = data;

			const hotelsData = await axios.get('http://localhost:1337/hotels');

			hotels = hotelsData.data;
		} catch (e) {
			console.log(e);
		}
	}

	if (!JWT) {
		return {
			redirect: {
				permanent: false,
				destination: '/',
			},
		};
	}

	return {
		props: {
			user,
			JWT,
			hotels,
		},
	};
};
